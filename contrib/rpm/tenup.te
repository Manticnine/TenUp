policy_module(tenup, 1.100.1)

########################################
#
# Declarations
#

type tenup_t;
type tenup_exec_t;
init_daemon_domain(tenup_t, tenup_exec_t)

permissive tenup_t;

type tenup_initrc_exec_t;
init_script_file(tenup_initrc_exec_t)

type tenup_conf_t;
files_type(tenup_conf_t)

type tenup_var_lib_t;
files_type(tenup_var_lib_t)

type tenup_var_run_t;
files_type(tenup_var_run_t)

type tenup_port_t;
corenet_port(tenup_port_t)

########################################
#
# tenup local policy
#
allow tenup_t self:process { fork };

allow tenup_t self:fifo_file rw_fifo_file_perms;
allow tenup_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(tenup_t, tenup_conf_t, tenup_conf_t)
manage_files_pattern(tenup_t, tenup_conf_t, tenup_conf_t)

manage_dirs_pattern(tenup_t, tenup_var_lib_t, tenup_var_lib_t)
manage_files_pattern(tenup_t, tenup_var_lib_t, tenup_var_lib_t)
files_var_lib_filetrans(tenup_t, tenup_var_lib_t, { dir file })

manage_dirs_pattern(tenup_t, tenup_var_run_t, tenup_var_run_t)
manage_files_pattern(tenup_t, tenup_var_run_t, tenup_var_run_t)

sysnet_dns_name_resolve(tenup_t)
corenet_all_recvfrom_unlabeled(tenup_t)

allow tenup_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(tenup_t)
corenet_tcp_sendrecv_generic_node(tenup_t)
corenet_tcp_sendrecv_all_ports(tenup_t)
corenet_tcp_bind_generic_node(tenup_t)

gen_require(`
    type tenup_port_t;
')
allow tenup_t tenup_port_t:tcp_socket name_bind;

gen_require(`
    type tenup_port_t;
')
allow tenup_t tenup_port_t:tcp_socket name_connect;

domain_use_interactive_fds(tenup_t)

files_read_etc_files(tenup_t)

miscfiles_read_localization(tenup_t)

sysnet_dns_name_resolve(tenup_t)

allow tenup_t tenup_exec_t:file execute_no_trans;
allow tenup_t self:process setsched;
corecmd_exec_ls(tenup_t)
corenet_tcp_connect_http_port(tenup_t)
dev_read_urand(tenup_t)
fs_getattr_xattr_fs(tenup_t)
kernel_read_system_state(tenup_t)
